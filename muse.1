.\" Process this file with
.\" groff -man -Tascii foo.1
.\"
.TH MUSE 1 "April 2004" UNIX "User Manuals"
.SH NAME
MuSE - Multiple Streaming Engine
.SH SYNOPSIS
.B muse [
.I generic opt
.B ] [ [ -N
.I input opt
.B ]
.I files
.B ] [-e [
.I encoder opt
.B ] [
.I stream opt
.B ] ]

.SH DESCRIPTION
\fBMuSE\fP is a user friendly application and at the same time a slick commandline tool for mixing, encoding, and network streaming of sound. MuSE can simultaniously mix up to 6 encoded audio inputs from microphone, files or network ogg and mp3 streams. The resulting mixed audio can be played locally on the sound card, saved in a file and/or encoded as an ogg or mp3 stream sent to a broadcast server. MuSE offers two intuitive interfaces (graphical gtk2 and console ncurses) to be operated realtime, while can also run in commandline mode.

In this manual you get explained the latter mentioned commandline mode, usually appealing to unix ascii freaks.

\fBMuSE\fP is being developed in the hope to provide the Free Software Community with a useful and user friendly tool for network audio streaming, making life easier for indypendent free speech radios.


.SH COMMAND LINE USAGE
Command line options in MuSE are position sensitive: all the encoder options affect the last encoder specified, all the servers are relative to the last encoding specified, all the server options affect the last server specified. In that way you can specify as much encoded streams you want and as much servers you need for each of them.

In fact MuSE can stream at multiple bitrates and to multiple servers.


.SH GENERIC OPTIONS
.IP "-h --help"
show help
.IP "-v --version"
show version information
.IP "-D --debug [\fI num \fP]"
set debug verbosity level to \fInum\fP between 1 and 3, useful to figure out where is the problem and to file good bug reports, default is 1
.IP "-o --dspout"
disable souncard output
.IP "-C --cli"
command line input. cli GUI is selected (same as -g cli) 
.IP "-g --gui \fIname\fP"
specify GUI \fIname\fP to use. Use \fIlist\fP to get a list of available GUIs

.SH INPUT CHANNELS OPTIONS
.IP "-i --live"
mix soundcard live input: capture from mic or line-in - off by default
.IP "-N --number"
set the current input \fIchannel\fP number, starting from 1 to 6 - default 1
.IP "Options below affect the current \fIchannel\fP specified."
.IP "-V --volume"
input channel volume, float from 0.0 to 1.0 - default 1.0
.IP "-S --position"
input channel starting position, float from 0.0 to 1.0 - default 0.0
.IP "-P --playmode"
input channel playmode: play, cont, loop - default 'cont'
.IP \fIfiles\fP
to append to the current input \fIchannel\fP playlist

.SH ENCODER OPTIONS
.IP "-e --encoder \fIenc\fP"
select \fIenc\fP codec to use. Possible choices are ogg and mp3 - default ogg
.IP "Options below affect the last \fIenc\fP specified."
.IP "-b --bitrate \fIrate\fP"
set codec bitrate in Kbit/s - default 24
.IP "-r --frequency \fIfreq\fP"
set encoding frequency to \fIfreq\fP. Possible choices are 0, 11000, 16000,
22050 or 44100. 0 means auto - default auto
.IP "-q --quality \fIqual\fP"
set encoding quality to \fIqual\fP between 0.1 and 9.0 - default 4.0
.IP "-c --channels \fInum\fP"
set number of audio channels to use: 1=mono 2=stereo - default 1
.IP "-f --filedump \fIfile\fP"
dump audio stream to \fIfile\fP

.SH STREAM OPTIONS
.IP "-s --server \fIserver\fP[:\fIport\fP]"
send stream to \fIserver\fP on port \fIport\fP.
.br
default port is 8000
.IP "Options below affect the last \fIserver\fP specified."
.IP "-m --mount \fImountpoint\fP"
use mounpoint \fImountpoint\fP on \fIserver\fP - default 'live'
.IP "-l --login \fIlogin type\fP"
server login type: [ice1|ice2|icy] - default 'ice2'
.IP "-U --user \fIusername\fP"
account username on the \fIserver\fP - default 'source'
.IP "-p --pass \fIpassword\fP"
account password on the \fIserver\fP
.IP "-n --name \fIname\fP"
descriptive \fIname\fP of the stream
.IP "-u --url \fIurl\fP"
descriptive \fIurl\fP of the stream
.IP "-d --desc \fIdesc\fP"
full \fIdescription\fP of the stream

.SH INPUT CHANNELS FORMAT
MuSE offers a variety of formats for the input channels you are going
to play: when compiled with all features it supports Mp3, Ogg/Vorbis,
Wav, Aiff, Voc, Snd, Pvf, Mat, Au, Sf audio formats.

You can also use playlists with muse: text files which store on each
line the location of the file to be queued when playing. To easily
generate such a text file you can simply do:
.br
.B find /my/music/dir/ -name "*.ogg" > ogg-playlist.pls
.br
and then you can load the 'ogg-playlist.pls generated file to be
played by MuSE.

Last but not least you can use filesystem directories: if a directory
is loaded as an input channel in MuSE, it will be recursively searched
and all playable formats inside will be added to the playlist queue.

.SH HOW TO LISTEN
In order to make people able to tune in and listen to your stream, you
should communicate your listeners the URL of your network radio. That
is formed by elements of the options that you are using: the
\fIserver\fP, the \fIport\fP (which defaults to 8000) and the
\fImountpoint\fP.

Therefore a muse commandline containing the options
.br
.B [...] -s stream.dyne.org:7090 -m my-radio.ogg
.br
will be available to be listened at the URL
\fIhttp://stream.dyne.org:7090/my-radio.ogg\fP which should be simply
typed in the 'Open Location' dialog of most audio players.

.SH COMMANDLINE USAGE EXAMPLES

.B muse -C -i -N1 -V0.5 test.wav -N2 -V0.7 test.ogg -e ogg -f record.ogg -s stream.dyne.org -m muse-example.ogg -l ice2 -p hackme
.br
The above command starts muse in commandline mode, recording from the
soundcard input and continuously mixing two channes over it: the first
playing test.wav at half volume, the second test.ogg at slightly
higher volume. The resulting audio is then encoded in Ogg/Vorbis
format and simultaneously recorder in the record.ogg file and streamed
to the stream.dyne.org server, using mountpoint 'muse-example' and the
icecast2 type login password 'hackme'.  The stream will be available
at the url \fIhttp://stream.dyne.org:8000/muse-example.ogg\fP
.br
.B muse -C playlist.pls -e ogg -s stream.dyne.org:6969 -m my-music -l ice2 -p hackme
.br
The above (simplier) command plays continuously all files listed in
the 'playlist.pls', encoding them in Ogg/Vorbis and streaming them to
stream.dyne.org (port 6969) icecast2 server on mountpoint 'my-music'
with password 'hackme'. The listening URL for the stream will
therefore be http://stream.dyne.org:6969/my-music - you can also avoid
to listen the music being streamed on your computer by using the -o
flag at the very beginning of the commandline.

.SH SCHEDULER

Depending on the version,
.B MuSE 
might sport a scheduler allowing you to stream 
files, URLs, playlists or
.B MuSE 
channels at specified days & hours. The 
scheduler can be operated through the GTK interface (other interfaces do not 
have it yet) or by directly editing the 
.B $HOME/.muse/schedule.xml 
file.

The aforementionned file contains comments explaining all tags, attributes
and wildcards supported - use it also as help for editing the schedule
through the GUI. 

.SH BUGS

Bug reporting is very welcome, especially if you know how to use the
CVS version of this software. The sourcecode comes with memory fencing
(dmalloc) and profiling functionalities, more information on how to
download from CVS is available on the website muse.dyne.org.

When you have a bugreport, complete with \fIdebug logs\fP (using the
-D3 flag) and possibly with the \fIgdb backtraces\fP you can submit it
in the bugtracker system on \fIhttp://bugs.dyne.org\fP.

Thanks much for your collaboration, we need expert people to
consciously follow development and bugfixing: you can surely do if you
understood all the above ;)


.SH AUTHORS
.nf
Denis "jaromil" Rojo - author and mantainer \fIrastasoft.org\fR
Antonino "nightolo" Radici - GTK+ interface \fIfreaknet.org\fR
Luca "rubik" Profico - NCURSES interface \fIolografix.org\fR
Angelo "pallotron" Failla - more input channels \fIfreaknet.org\fR
Eugen Melinte - time program scheduler

a full list of developers can be found in the AUTHOR file

This manual page was written by Filippo "godog" Giunchedi
and further edited by jaromil.

Join and write the mailinglist on \fIlists.dyne.org/muse\fR
to contact users and developers.
.fi

.SH COPYING

Permission is granted to copy, distribute and/or modify this manual
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation;
Permission is granted to make and distribute verbatim copies of this
manual page provided the above copyright notice and this permission
notice are preserved on all copies.

--

MuSE source code is free software; you can redistribute it and/or
modify it under the terms of the GNU Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

MuSE source code is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Please refer to the GNU Public License for more details.

You should have received a copy of the GNU Public License along with
this source code; if not, write to:
Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.


.SH AVAILABILITY

The most recent version of \fIMuSE\fR can be obtained from its
homepage at \fIhttp://muse.dyne.org\fR.
